// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class TestInputFormTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void testInputForm() {
    // Test name: TestInputForm
    // Step # | name | target | value
    // 1 | open | /form | (dummy file test)
    driver.get("https://formy-project.herokuapp.com/form");
    // 2 | setWindowSize | 796x454 | 
    driver.manage().window().setSize(new Dimension(796, 454));
    // 3 | click | id=first-name | (test)
    driver.findElement(By.id("first-name")).click();
    // 4 | click | id=first-name | 
    driver.findElement(By.id("first-name")).click();
    // 5 | type | id=first-name | Ridha
    driver.findElement(By.id("first-name")).sendKeys("Ridha");
    // 6 | click | id=last-name | (test)
    driver.findElement(By.id("last-name")).click();
    // 7 | type | id=last-name | Maulana
    driver.findElement(By.id("last-name")).sendKeys("Maulana");
    // 8 | click | id=job-title | (test)
    driver.findElement(By.id("job-title")).click();
    // 9 | type | id=job-title | Mahasiswa
    driver.findElement(By.id("job-title")).sendKeys("Mahasiswa");
    // 10 | click | id=radio-button-2 | (test)
    driver.findElement(By.id("radio-button-2")).click();
    // 11 | click | css=.form-group | (test)
    driver.findElement(By.cssSelector(".form-group")).click();
    // 12 | click | id=checkbox-1 | (test)
    driver.findElement(By.id("checkbox-1")).click();
    // 13 | click | id=select-menu | (test)
    driver.findElement(By.id("select-menu")).click();
    // 14 | select | id=select-menu | label=2-4 (test)
    {
      WebElement dropdown = driver.findElement(By.id("select-menu"));
      dropdown.findElement(By.xpath("//option[. = '2-4']")).click();
    }
    // 15 | click | id=datepicker | (test)
    driver.findElement(By.id("datepicker")).click();
    // 16 | click | css=.datepicker-days .datepicker-switch | 
    driver.findElement(By.cssSelector(".datepicker-days .datepicker-switch")).click();
    // 17 | click | css=.datepicker-months td | 
    driver.findElement(By.cssSelector(".datepicker-months td")).click();
    // 18 | click | css=.datepicker-months .datepicker-switch | 
    driver.findElement(By.cssSelector(".datepicker-months .datepicker-switch")).click();
    // 19 | click | css=.datepicker-years .prev | 
    driver.findElement(By.cssSelector(".datepicker-years .prev")).click();
    // 20 | click | css=.datepicker-years .prev | 
    driver.findElement(By.cssSelector(".datepicker-years .prev")).click();
    // 21 | click | css=.year:nth-child(3) | 
    driver.findElement(By.cssSelector(".year:nth-child(3)")).click();
    // 22 | click | css=.month:nth-child(3) | 
    driver.findElement(By.cssSelector(".month:nth-child(3)")).click();
    // 23 | click | css=tr:nth-child(2) > .day:nth-child(7) | 
    driver.findElement(By.cssSelector("tr:nth-child(2) > .day:nth-child(7)")).click();
    // 24 | click | linkText=Submit | 
    driver.findElement(By.linkText("Submit")).click();
    // 25 | click | css=h1 | 
    driver.findElement(By.cssSelector("h1")).click();
    // 26 | assertText | css=h1 | Thanks for submitting your form (test)
    assertThat(driver.findElement(By.cssSelector("h1")).getText(), is("Thanks for submitting your form"));
    // 27 | verifyText | css=.alert | The form was successfully submitted! (test)
    assertThat(driver.findElement(By.cssSelector(".alert")).getText(), is("The form was successfully submitted!"));
    // 28 | close |  | 
    driver.close();
  }
}
